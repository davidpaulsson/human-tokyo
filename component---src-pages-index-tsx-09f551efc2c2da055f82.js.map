{"version":3,"file":"component---src-pages-index-tsx-09f551efc2c2da055f82.js","mappings":"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","sources":["webpack://human-tokyo-gatsby/../src/image-utils.ts","webpack://human-tokyo-gatsby/../src/components/hooks.ts","webpack://human-tokyo-gatsby/../src/components/layout-wrapper.tsx","webpack://human-tokyo-gatsby/../src/components/picture.tsx","webpack://human-tokyo-gatsby/../src/components/placeholder.tsx","webpack://human-tokyo-gatsby/../src/components/main-image.tsx","webpack://human-tokyo-gatsby/../src/components/gatsby-image.server.tsx","webpack://human-tokyo-gatsby/../src/components/gatsby-image.browser.tsx","webpack://human-tokyo-gatsby/../src/components/static-image.server.tsx","webpack://human-tokyo-gatsby/../src/components/static-image.tsx","webpack://human-tokyo-gatsby/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://human-tokyo-gatsby/./src/components/Video/ht-skull-1080.mp4","webpack://human-tokyo-gatsby/./src/components/Video/Video.module.scss","webpack://human-tokyo-gatsby/./src/components/Video/Video.tsx","webpack://human-tokyo-gatsby/./src/components/Gallery/Gallery.module.scss","webpack://human-tokyo-gatsby/./src/components/Gallery/Gallery.tsx","webpack://human-tokyo-gatsby/./src/components/Intro/Intro.module.scss","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/js/driver-frameloop.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/js/index.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/waapi/index.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/index.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://human-tokyo-gatsby/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://human-tokyo-gatsby/./src/components/Intro/Intro.tsx","webpack://human-tokyo-gatsby/./src/components/Header/Header.module.scss","webpack://human-tokyo-gatsby/./src/components/Symbol/Symbol.tsx","webpack://human-tokyo-gatsby/./src/components/Wordmark/Wordmark.tsx","webpack://human-tokyo-gatsby/./src/components/Wordmark2/Wordmark2.tsx","webpack://human-tokyo-gatsby/./src/components/Header/Header.tsx","webpack://human-tokyo-gatsby/./src/components/Layout/Layout.tsx","webpack://human-tokyo-gatsby/./src/pages/index.tsx"],"sourcesContent":["import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default __webpack_public_path__ + \"static/ht-skull-1080-083d8239a3798dcd54d77e3910dbaa2d.mp4\";","// extracted by mini-css-extract-plugin\nexport var video = \"Video-module--video--2ee51\";","import React, { useEffect } from 'react';\nimport video from './ht-skull-1080.mp4';\n\nimport * as styles from './Video.module.scss';\n\nexport default function Video() {\n  const vid = React.useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([e]) => {\n        if (e.isIntersecting) {\n          vid.current?.play();\n        }\n      },\n      { threshold: 0.25 },\n    );\n\n    if (vid.current) {\n      observer.observe(vid.current);\n    }\n\n    return () => {\n      if (vid.current) {\n        observer.unobserve(vid.current);\n      }\n    };\n  }, [vid.current]);\n\n  return (\n    <video loop muted ref={vid} className={styles.video}>\n      <source src={video} type=\"video/mp4\" />\n    </video>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var gallery = \"Gallery-module--gallery--41eb3\";\nexport var image = \"Gallery-module--image--8d775\";","import { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\nimport Video from '../Video';\n\nimport * as styles from './Gallery.module.scss';\n\nexport default function Gallery() {\n  return (\n    <div className={styles.gallery}>\n      <Video />\n      <StaticImage\n        className={styles.image}\n        src=\"./assets/images/ht-closeup-1.jpg\"\n        alt=\"\"\n        placeholder=\"blurred\"\n        layout=\"fullWidth\"\n        formats={['auto', 'webp', 'avif']}\n        quality={80}\n      />\n      <StaticImage\n        className={styles.image}\n        src=\"./assets/images/ht-closeup-2.jpg\"\n        alt=\"\"\n        placeholder=\"blurred\"\n        layout=\"fullWidth\"\n        formats={['auto', 'webp', 'avif']}\n        quality={80}\n      />\n      <StaticImage\n        className={styles.image}\n        src=\"./assets/images/ht-closeup-3.jpg\"\n        alt=\"\"\n        placeholder=\"blurred\"\n        layout=\"fullWidth\"\n        formats={['auto', 'webp', 'avif']}\n        quality={80}\n      />\n      <StaticImage\n        className={styles.image}\n        src=\"./assets/images/ht-poster-1.jpg\"\n        alt=\"\"\n        placeholder=\"blurred\"\n        layout=\"fullWidth\"\n        formats={['auto', 'webp', 'avif']}\n        quality={80}\n      />\n      <StaticImage\n        className={styles.image}\n        src=\"./assets/images/ht-poster-2.jpg\"\n        alt=\"\"\n        placeholder=\"blurred\"\n        layout=\"fullWidth\"\n        formats={['auto', 'webp', 'avif']}\n        quality={80}\n      />\n      <StaticImage\n        className={styles.image}\n        src=\"./assets/images/ht-poster-3.jpg\"\n        alt=\"\"\n        placeholder=\"blurred\"\n        layout=\"fullWidth\"\n        formats={['auto', 'webp', 'avif']}\n        quality={80}\n      />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var intro = \"Intro-module--intro--93ca6\";\nexport var intro__eng = \"Intro-module--intro__eng--ff605\";\nexport var intro__jap = \"Intro-module--intro__jap--57795\";","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.2.5\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../frameloop/index.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        now: () => performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration;\n}\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = timestamp - startTime;\n        }\n        // Rebase on delay\n        currentTime = Math.max(currentTime - delay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = currentIteration % 2;\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            const p = currentTime >= totalDuration\n                ? repeatType === \"reverse\" && iterationIsOdd\n                    ? 0\n                    : 1\n                : clamp(0, 1, iterationProgress);\n            elapsed = p * resolvedDuration;\n        }\n        const state = frameGenerator.next(elapsed);\n        let { value, done } = state;\n        if (onUpdate) {\n            onUpdate(mapNumbersToKeyframes ? mapNumbersToKeyframes(value) : value);\n        }\n        if (calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (isAnimationFinished) {\n            playState = \"finished\";\n            onComplete && onComplete();\n            animationDriver && animationDriver.stop();\n        }\n        return state;\n    };\n    const play = () => {\n        animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        get currentTime() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set currentTime(newTime) {\n            if (holdTime !== null || !animationDriver) {\n                holdTime = 0;\n            }\n            else {\n                startTime =\n                    animationDriver.now() - secondsToMilliseconds(newTime);\n            }\n        },\n        stop: () => {\n            onStop && onStop();\n            animationDriver && animationDriver.stop();\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set currentTime(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { animateValue } from './js/index.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\n\nfunction createInstantAnimation({ keyframes, delay: delayBy, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return {\n            stop: () => { },\n            currentTime: 0,\n        };\n    };\n    return delayBy\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: delayBy,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","class GroupPlaybackControls {\n    constructor(animations) {\n        this.animations = animations.filter(Boolean);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    get currentTime() {\n        return this.animations[0].currentTime;\n    }\n    /**\n     * currentTime assignment could reasonably run every frame, so\n     * we iterate using a normal loop to avoid function creation.\n     */\n    set currentTime(time) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i].currentTime = time;\n        }\n    }\n    stop() {\n        this.animations.forEach((controls) => controls.stop());\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                /**\n                 * If the parent target isn't up-to-date, force it to update.\n                 * This is an unfortunate de-optimisation as it means any updating relative\n                 * projection will cause all the relative parents to recalculate back\n                 * up the tree.\n                 */\n                if (this.relativeParent.resolvedRelativeTargetAt !==\n                    frameData.timestamp) {\n                    this.relativeParent.resolveTargetDelta(true);\n                }\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return value.animation || new GroupPlaybackControls([]);\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.2.5\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.2.5 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import React, { useEffect, useRef } from 'react';\nimport * as styles from './Intro.module.scss';\nimport { motion } from 'framer-motion';\n\nconst itemVariants = {\n  hidden: { opacity: 0, translateY: -30 },\n  visible: {\n    opacity: 1,\n    translateY: 0,\n    transition: { ease: 'easeOut', duration: 0.6 },\n  },\n};\n\nconst letters = 'abcdefghijklmnopqrstuvwxyz';\n\nconst Item: React.FC<{ text: string }> = ({ text }) => {\n  const el = useRef(null);\n  useEffect(() => {\n    const element = el.current as unknown as HTMLElement;\n\n    if (!element) {\n      return;\n    }\n\n    let iteration = 0;\n\n    // clearInterval(interval);\n\n    const interval = setInterval(() => {\n      element.innerText = element.innerText\n        .split('')\n        .map((_, index) => {\n          if (index < iteration) {\n            return element.dataset.value[index];\n          }\n\n          return letters[Math.floor(Math.random() * 26)];\n        })\n        .join('');\n\n      if (iteration >= element.dataset.value.length) {\n        clearInterval(interval);\n      }\n\n      iteration += 1 / 3;\n    }, 30);\n  }, []);\n\n  return (\n    <motion.p data-value={text} variants={itemVariants} ref={el}>\n      {text}\n    </motion.p>\n  );\n};\n\nexport default function Intro() {\n  return (\n    <header className={styles.intro}>\n      <motion.div\n        className={styles.intro__eng}\n        initial=\"hidden\"\n        animate=\"visible\"\n        variants={{\n          visible: {\n            transition: {\n              staggerChildren: 0.1,\n            },\n          },\n        }}\n      >\n        <Item text=\"Tomorrow is today\" />\n        <Item text=\"We come apart\" />\n        <Item text=\"We come together\" />\n        <Item text=\"Technology is human\" />\n        <Item text=\"Human is technology\" />\n        <Item text=\"Cities are connected\" />\n        <Item text=\"Cities are one\" />\n        <Item text=\"Human Tokyo\" />\n      </motion.div>\n\n      <motion.div\n        className={[styles.intro__jap, 'jap'].join(' ')}\n        initial=\"hidden\"\n        animate=\"visible\"\n        variants={{\n          visible: {\n            transition: {\n              staggerChildren: 0.1,\n              delayChildren: 0.1,\n            },\n          },\n        }}\n      >\n        <Item text=\"明日は今日\" />\n        <Item text=\"私たちはバラバラになります\" />\n        <Item text=\"私たちは一緒に来ます\" />\n        <Item text=\"技術は人間\" />\n        <Item text=\"人間はテクノロジー\" />\n        <Item text=\"都市はつながっている\" />\n        <Item text=\"都市はひとつ\" />\n        <Item text=\"ヒューマン東京\" />\n      </motion.div>\n    </header>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var header = \"Header-module--header--357cc\";","import * as React from 'react';\n\nexport default function Symbol(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg width={28} height={28} fill=\"none\" {...props}>\n      <path\n        d=\"M21 0H7a7 7 0 00-7 7v14a7 7 0 007 7h14a7 7 0 007-7V7a7 7 0 00-7-7zM7 17.5a3.5 3.5 0 110-7 3.5 3.5 0 010 7zm14 0a3.5 3.5 0 110-7 3.5 3.5 0 010 7z\"\n        fill=\"var(--color-white-100)\"\n      />\n    </svg>\n  );\n}\n","import * as React from 'react';\n\nexport default function Wordmark(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg width={108} height={24} fill=\"none\" {...props}>\n      <g clipPath=\"url(#prefix__clip0_904_2268)\" fill=\"var(--color-white-100)\">\n        <g opacity={0.6}>\n          <path d=\"M36.075 20.613v-4.177h-3.523v-.825h4.415v-.971h-4.415v-1.005h-1.095v1.005h-4.313v.971h4.313v.825h-3.353v4.177h2.54c-.93.941-2.315 1.785-3.62 2.281l.55.948c1.377-.564 2.833-1.558 3.883-2.698v2.845h1.095v-2.891c1.062 1.163 2.563 2.19 3.952 2.755l.564-.974c-1.334-.478-2.743-1.329-3.692-2.266h2.699zm-4.618-.802h-2.326v-.914h2.326v.915zm0-1.67h-2.326v-.904h2.326v.903zm1.095-.904h2.462v.903h-2.462v-.903zm0 2.575v-.915h2.462v.915h-2.462zM5.61 13.94H4.233c-.077 1.457-.017 6.494-4.233 8.967l.575.992c2.62-1.503 3.805-3.94 4.346-6.097.542 2.156 1.728 4.595 4.347 6.097l.575-.992c-4.216-2.473-4.155-7.51-4.233-8.967zM47.21 16.751h-7.226v3.433h3.004v2.63c0 .147-.057.192-.26.192-.171.01-.818.011-1.46-.009l.167.727c.027.093.05.183.062.264.949.011 1.603 0 2.032-.147.43-.147.554-.44.554-1.005v-2.653h3.128V16.75v.001zm-1.106 2.53h-5.07v-1.604h5.07v1.603zM38.648 15.837h9.8v-1.005H44.08v-1.209H42.96v1.209h-4.313v1.005z\" />\n          <path d=\"M40.387 20.749c-.384.705-1.123 1.559-1.871 2.127l.731.717c.802-.632 1.66-1.614 2.202-2.506l-1.062-.338zM45.55 21.211c.734.756 1.626 1.818 2.022 2.473l1.027-.53c-.44-.667-1.366-1.683-2.078-2.406l-.97.463zM16.283 14.087h-4.166V24h1.04v-5.984h3.127v-3.93.001zm-.994 3.15h-2.133v-.835h2.133v.835zm0-1.58h-2.133v-.779h2.133v.779z\" />\n          <path d=\"M14.61 18.795v4.73h.96v-.564h3.274v-4.166H14.61zm3.252 3.376H15.57v-.937h2.291v.937zm0-1.705H15.57v-.88h2.291v.88z\" />\n          <path d=\"M17.176 18.039h3.206v4.674c0 .191-.056.248-.26.26-.18 0-.722.011-1.275-.011l.2 1.027c.891 0 1.485-.017 1.866-.18.406-.181.53-.52.53-1.118v-8.604h-4.267v3.952zm1.005-3.161h2.201v.778h-2.201v-.778zm0 1.524h2.201v.858h-2.201v-.858zM24.387 22.338a.825.825 0 100 1.65.825.825 0 000-1.65z\" />\n        </g>\n        <path d=\"M7.638 10.252v-4.64H2.443v4.64H1.137V.208h1.306v4.39h5.195V.208h1.305v10.044H7.638zM18.546 9.397c-.693.69-1.687 1.035-2.981 1.035-1.34 0-2.346-.329-3.017-.986-.67-.658-1.005-1.677-1.005-3.056V.208h1.361V6.21c0 .36.019.722.056 1.083.037.361.157.7.361 1.014.241.38.57.655.986.826a3.32 3.32 0 001.278.257c.518 0 1.003-.115 1.452-.347.45-.232.78-.597.993-1.097.12-.278.192-.567.215-.868.023-.301.035-.6.035-.896V.208h1.305v6.21c0 1.297-.347 2.29-1.04 2.98zM31.67 10.252V1.208l-3.543 9.043h-1.194l-3.557-9.057v9.057h-1.18V.208h2.083l3.307 8.489L30.809.208h2.083v10.044H31.67zM42.575 10.252l-1.042-2.653h-4.861l-1.028 2.653h-1.32L38.408.208h1.43l4.238 10.044h-1.5zm-3.528-8.918l-2.014 5.278h4.097l-2.083-5.278zM51.672 10.252l-4.987-8.71v8.71h-1.181V.208h1.75l4.987 8.738V.208h1.181v10.044h-1.75zM62.079 1.222v9.03h-1.306v-9.03h-3.195V.208h7.71v1.015h-3.21zM74.524 5.154a7.65 7.65 0 01-.264 2.042 4.759 4.759 0 01-.82 1.673c-.37.477-.842.854-1.416 1.132-.575.278-1.256.417-2.042.417-.787 0-1.466-.134-2.035-.403a3.854 3.854 0 01-1.41-1.111 4.683 4.683 0 01-.82-1.654 7.5 7.5 0 01-.264-2.027c0-.704.09-1.373.27-2.007.181-.635.46-1.19.834-1.667A4.008 4.008 0 0167.974.416C68.544.14 69.217 0 69.995 0c.797 0 1.48.132 2.049.396a3.88 3.88 0 011.41 1.083c.37.459.642 1.002.813 1.632.171.63.257 1.311.257 2.042zm-1.375.048c0-.52-.052-1.027-.153-1.524a3.976 3.976 0 00-.521-1.329 2.86 2.86 0 00-.98-.946c-.407-.24-.911-.362-1.514-.362-.583 0-1.076.123-1.479.369-.403.245-.729.565-.979.96-.25.394-.429.84-.535 1.336-.106.496-.16.994-.16 1.495 0 .511.054 1.016.16 1.517.106.501.283.95.528 1.35.246.398.57.721.973.966.403.246.9.37 1.493.37.593 0 1.09-.124 1.493-.37.403-.245.73-.568.98-.967.25-.398.427-.848.534-1.349.106-.5.16-1.005.16-1.516zM76.594 10.252V.208H77.9v10.044h-1.306zm5.987 0l-4.653-5.46L82.15.209h1.667L79.414 4.71l4.876 5.543H82.58zM89.358 6.098v4.154h-1.306v-4.21L84.176.208h1.542l3.056 4.779L91.788.208h1.445l-3.875 5.89zM102.473 5.154c0 .722-.087 1.403-.264 2.042a4.756 4.756 0 01-.819 1.673 3.94 3.94 0 01-1.417 1.132c-.574.278-1.255.417-2.042.417-.786 0-1.466-.134-2.035-.403a3.854 3.854 0 01-1.41-1.111 4.683 4.683 0 01-.82-1.654 7.5 7.5 0 01-.264-2.027c0-.704.09-1.373.271-2.007.18-.635.459-1.19.834-1.667A4.008 4.008 0 0195.922.416C96.493.14 97.167 0 97.945 0c.796 0 1.479.132 2.048.396.57.264 1.04.625 1.41 1.083a4.4 4.4 0 01.813 1.632c.171.63.257 1.311.257 2.042zm-1.375.048c0-.52-.051-1.027-.153-1.524a3.983 3.983 0 00-.521-1.329 2.858 2.858 0 00-.979-.946c-.408-.24-.912-.362-1.514-.362-.584 0-1.077.123-1.48.369-.403.245-.729.565-.979.96-.25.394-.428.84-.534 1.336a7.1 7.1 0 00-.16 1.495c0 .511.053 1.016.16 1.517.106.501.282.95.528 1.35.245.398.569.721.972.966.403.246.9.37 1.493.37.593 0 1.09-.124 1.493-.37a2.95 2.95 0 00.979-.967 4.15 4.15 0 00.535-1.349 7.3 7.3 0 00.16-1.516zM104.04.514V2.51h-.386V.514h-.818V.223h2.002v.291h-.798zm3.168 1.996V.552l-.722 1.958h-.292l-.735-1.958V2.51h-.368V.223h.577l.678 1.78.684-1.78h.551V2.51h-.373zM56.805 10.235a.825.825 0 100-1.65.825.825 0 000 1.65z\" />\n      </g>\n      <defs>\n        <clipPath id=\"prefix__clip0_904_2268\">\n          <path fill=\"var(--color-white-100)\" d=\"M0 0h107.52v24H0z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n}\n","import * as React from 'react';\n\nexport default function Wordmark2(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg width={58} height={28} fill=\"none\" {...props}>\n      <path\n        opacity={0.6}\n        d=\"M1.57 24.978v-3.906h6.944v3.906H1.57zm6.944-8.708v3.78H1.57v-3.78h6.944zM.52 15.248V26.91h1.05V26h6.944v.854h1.092V15.248H.52zm24.556 3.01v-1.036h-5.544v-2.926h-1.078v2.926h-5.502v1.036h4.858c-1.176 2.394-3.206 4.662-5.334 5.768.238.196.588.588.742.84 2.058-1.19 3.948-3.304 5.236-5.726v4.284h-2.73v1.036h2.73v2.604h1.078V24.46h2.66v-1.036h-2.66V19.14c1.26 2.422 3.136 4.55 5.25 5.712.154-.294.518-.7.77-.91-2.198-1.064-4.214-3.29-5.376-5.684h4.9zm6.076-3.486H27.33v.84h3.822v-.84zm-.84 8.456v2.324h-2.184v-2.324h2.184zm.91-.854h-4.004v4.676h.91v-.63h3.094v-4.046zm-3.976-1.078h3.92v-.826h-3.92v.826zm3.92-2.73h-3.92v.826h3.92v-.826zm-4.578-1.078h5.054v-.854h-5.054v.854zm10.99 5.516v2.478h-3.892v-2.478h3.892zm-4.872 4.06h.98v-.644h3.892v.588h1.008V22.08h-5.88v4.984zm4.508-9.016v2.03h-2.688c.126-.588.252-1.288.378-2.03h2.31zm.994 2.03v-2.926h-3.15c.084-.49.168-.98.238-1.442h3.696v-.91h-6.874v.91h2.156c-.07.462-.14.952-.224 1.442h-1.722v.896h1.582a53.55 53.55 0 01-.392 2.03h-1.82v.924h7.742v-.924h-1.232z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M.47 11V.878h6.006v.756H1.38v3.724h4.9v.756h-4.9v4.13h5.306V11H.47zm14.764 0L9.746 1.984V11h-.854V.878h1.232l5.488 9.044V.878h.854V11h-1.232zm11.423-.476a22.9 22.9 0 01-1.623.406 8.774 8.774 0 01-1.666.154c-.775 0-1.456-.13-2.044-.392a4.193 4.193 0 01-1.457-1.106A4.832 4.832 0 0119 7.948a6.942 6.942 0 01-.294-2.058c0-.69.088-1.349.265-1.974.187-.635.462-1.19.826-1.666a4.1 4.1 0 011.386-1.134c.56-.29 1.218-.434 1.974-.434.43 0 .84.056 1.233.168.392.103.741.266 1.05.49.307.215.555.495.741.84.197.336.318.737.364 1.204h-.98c-.112-.663-.382-1.148-.812-1.456-.42-.317-.956-.476-1.61-.476-.616 0-1.143.126-1.582.378-.429.252-.784.583-1.064.994a4.51 4.51 0 00-.602 1.4A7.2 7.2 0 0019.91 7.5c.14.541.355 1.022.645 1.442.298.41.68.742 1.148.994.466.243 1.026.364 1.68.364.4 0 .797-.028 1.19-.084a7.547 7.547 0 001.19-.266V6.632h-2.549v-.756h3.444v4.648zm2.756.476V.878h.91v9.366h5.082V11h-5.992zm7.793 0V.878h.91V11h-.91zm10.198-2.758c0 .504-.103.938-.308 1.302a2.675 2.675 0 01-.812.896 3.562 3.562 0 01-1.162.518c-.43.112-.868.168-1.316.168-.467 0-.896-.051-1.288-.154a2.954 2.954 0 01-1.036-.49 2.667 2.667 0 01-.714-.854c-.187-.355-.303-.775-.35-1.26h.952c.01.364.084.672.224.924s.322.457.546.616c.224.159.48.275.77.35a4.444 4.444 0 001.862 0c.317-.075.602-.187.854-.336.252-.159.457-.364.616-.616.159-.252.238-.555.238-.91 0-.27-.056-.509-.168-.714a1.653 1.653 0 00-.448-.546 2.856 2.856 0 00-.686-.42 7.286 7.286 0 00-.882-.336l-.742-.238c-.41-.13-.789-.27-1.134-.42a3.792 3.792 0 01-.896-.532 2.37 2.37 0 01-.602-.728c-.14-.29-.21-.63-.21-1.022 0-.476.093-.882.28-1.218a2.57 2.57 0 01.756-.826 3.245 3.245 0 011.078-.49 4.951 4.951 0 011.232-.154c.383 0 .76.042 1.134.126.383.075.718.205 1.008.392.298.177.541.42.728.728.187.299.285.672.294 1.12h-.938a1.703 1.703 0 00-.238-.77 1.408 1.408 0 00-.476-.49c-.196-.13-.42-.22-.672-.266a3.67 3.67 0 00-1.68.028c-.29.065-.55.173-.784.322-.233.14-.425.331-.574.574-.15.233-.224.518-.224.854 0 .495.186.891.56 1.19.383.29.966.56 1.75.812l.84.266c.41.13.774.27 1.092.42.317.14.588.308.812.504.224.196.397.43.518.7.121.27.187.597.196.98zM56.24 11V6.17h-5.628V11h-.91V.878h.91v4.536h5.628V.878h.91V11h-.91z\"\n        fill=\"#fff\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport * as styles from './Header.module.scss';\nimport Symbol from '../Symbol';\nimport Wordmark from '../Wordmark';\nimport Wordmark2 from '../Wordmark2';\n\nexport default function Header() {\n  return (\n    <div className={styles.header}>\n      <Wordmark />\n      <Wordmark2 />\n      <Symbol />\n    </div>\n  );\n}\n","import React from 'react';\nimport Header from '../Header';\nimport '@fontsource/noto-sans-jp/300.css';\nimport '@fontsource/inter/200.css';\nimport './reset.css';\nimport './global.css';\n\nconst Layout = ({ children }: { children: JSX.Element[] }) => {\n  return (\n    <>\n      <Header />\n      <main>{children}</main>\n    </>\n  );\n};\n\nexport default Layout;\n","import type { HeadFC } from 'gatsby';\nimport React from 'react';\nimport Gallery from '../components/Gallery';\nimport Intro from '../components/Intro';\nimport Layout from '../components/Layout';\n\nconst IndexPage = () => {\n  return (\n    <Layout>\n      <Intro />\n      <Gallery />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Human Tokyo</title>;\n"],"names":["j","hasNativeLazyLoadSupport","HTMLImageElement","prototype","_","e","t","a","i","s","width","height","className","style","O","h","loading","shouldLoad","opacity","z","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","P","A","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","q","children","u","H","F","G","srcSet","decoding","V","fallback","sources","sizes","length","map","_ref6","media","type","key","B","propTypes","displayName","U","Y","Error","X","J","Z","K","replace","Q","_len","arguments","Array","_key","c","concat","ee","image","te","ae","ie","Set","se","re","ne","as","class","g","onStartLoad","p","onLoad","m","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","oe","le","de","__imageData","__error","console","warn","ce","imgClassName","imgStyle","placeholder","he","_len2","_key2","ue","ge","pe","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","x","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","preserveCamelCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","lastIndex","m1","charAt","postProcess","identifier","module","exports","video","Video","vid","React","useEffect","observer","IntersectionObserver","_ref","_vid$current","isIntersecting","play","threshold","observe","unobserve","loop","muted","styles","gallery","Gallery","StaticImage","formats","quality","require","intro","intro__eng","intro__jap","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","isRefObject","Object","hasOwnProperty","call","isVariantLabel","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","useConstant","init","useRef","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxHeight","size","padding","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","pipe","transformers","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","frameData","delta","timestamp","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","buffer","push","cancel","index","splice","delete","process","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","initIntersectionObserver","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","isNumericalString","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","velocityPerSecond","velocity","frameDuration","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","onChange","subscription","on","unsubscribe","read","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","getPrevious","startAnimation","Promise","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","functions","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","cubicBezierAsString","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","easing","featureTests","waapi","Element","results","supports","mirrorEasing","reverseEasing","to","progress","hueToRgb","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","now","performance","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","animationDriver","generatorFactory","mapNumbersToKeyframes","generator","mirroredGenerator","playState","holdTime","startTime","calculateDuration","resolvedDuration","Infinity","totalDuration","currentTime","tick","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","newTime","sample","acceleratedValues","sampleDelta","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","onfinish","getFinalKeyframe","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","delayBy","setValue","createInstantAnimation","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","exec","parseCSSVariable","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","GroupPlaybackControls","controls","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","resolvedRelativeTargetAt","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","parseDomVariant","resolveCSSVariables","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","itemVariants","hidden","visible","Item","text","el","iteration","interval","setInterval","innerText","dataset","random","clearInterval","Intro","div","header","Wordmark","clipPath","Wordmark2","Header","IndexPage","Layout","Head"],"sourceRoot":""}